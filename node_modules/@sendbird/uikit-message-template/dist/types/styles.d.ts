export declare enum Layout {
    Row = "row",
    Column = "column"
}
export declare enum AlignValue {
    Center = "center",
    Left = "left",
    Right = "right",
    Top = "top",
    Bottom = "bottom"
}
/**
 * @description
 * Caution: Numbers are passed as string types in the message template builder.
 * Use `==` comparison instead of `===` comparison when using a regular enum instead of a string enum.
 */
export declare enum FlexSizeSpecValue {
    FillParent = 0,
    WrapContent = 1
}
export declare enum FontWeight {
    Normal = "normal",
    Bold = "bold"
}
export declare enum MediaContentMode {
    AspectFit = "aspectFit",
    AspectFill = "aspectFill",
    ScalesToFill = "scalesToFill"
}
export type SizeSpec = {
    type: 'fixed';
    value: number;
} | {
    type: 'flex';
    value: FlexSizeSpecValue;
};
export interface Margin {
    top: number;
    bottom: number;
    left: number;
    right: number;
}
export interface Padding {
    top: number;
    bottom: number;
    left: number;
    right: number;
}
export interface Align {
    horizontal: AlignValue.Left | AlignValue.Center | AlignValue.Right;
    vertical: AlignValue.Top | AlignValue.Center | AlignValue.Bottom;
}
export interface ViewStyle {
    backgroundColor?: string;
    backgroundImageUrl?: string;
    borderWidth?: number;
    borderColor?: string;
    radius?: number;
    margin?: Margin;
    padding?: Padding;
}
export interface TextStyle {
    size?: number;
    color?: string;
    weight?: FontWeight | number;
}
export interface ImageStyle {
    contentMode?: MediaContentMode;
    tintColor?: string;
}
export interface ImageMetaData {
    pixelWidth: number;
    pixelHeight: number;
}
export interface CarouselStyle {
    spacing?: number;
    maxChildWidth?: number;
}
