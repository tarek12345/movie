import { FlexSizeSpecValue } from '../types/styles';
export declare const samples_for_size_spec: {
    version: number;
    body: {
        items: {
            elementId: string;
            type: string;
            layout: string;
            width: {
                type: string;
                value: number;
            };
            height: {
                type: string;
                value: number;
            };
            items: {
                type: string;
                layout: string;
                align: {
                    horizontal: string;
                    vertical: string;
                };
                width: {
                    type: string;
                    value: number;
                };
                height: {
                    type: string;
                    value: number;
                };
                items: {
                    type: string;
                    viewStyle: {
                        backgroundColor: string;
                        padding: {
                            top: number;
                            bottom: number;
                            left: number;
                            right: number;
                        };
                    };
                    text: string;
                    textStyle: {
                        size: number;
                        color: string;
                        weight: string;
                    };
                    maxTextLines: number;
                    width: {
                        type: string;
                        value: number;
                    };
                    height: {
                        type: string;
                        value: number;
                    };
                    align: {
                        horizontal: string;
                        vertical: string;
                    };
                    elementId: string;
                }[];
                elementId: string;
            }[];
        }[];
    };
}[];
export declare const samples_for_margin_issue: {
    version: number;
    body: {
        items: {
            elementId: string;
            type: string;
            layout: string;
            width: {
                type: string;
                value: FlexSizeSpecValue;
            };
            height: {
                type: string;
                value: FlexSizeSpecValue;
            };
            items: ({
                type: string;
                viewStyle: {
                    backgroundColor: string;
                    margin: {
                        top: number;
                        bottom: number;
                        left: number;
                        right: number;
                    };
                    padding: {
                        top: number;
                        bottom: number;
                        left: number;
                        right: number;
                    };
                };
                text: string;
                textStyle: {
                    size: number;
                    color: string;
                    weight: string;
                };
                maxTextLines: number;
                width: {
                    type: string;
                    value: FlexSizeSpecValue;
                };
                height: {
                    type: string;
                    value: number;
                };
                align: {
                    horizontal: string;
                    vertical: string;
                };
                elementId: string;
                imageUrl?: undefined;
                imageStyle?: undefined;
                metaData?: undefined;
                action?: undefined;
            } | {
                type: string;
                viewStyle: {
                    margin: {
                        left: number;
                        right: number;
                        top?: undefined;
                        bottom?: undefined;
                    };
                    backgroundColor?: undefined;
                    padding?: undefined;
                };
                width: {
                    type: string;
                    value: FlexSizeSpecValue;
                };
                height: {
                    type: string;
                    value: number;
                };
                imageUrl: string;
                imageStyle: {
                    contentMode: string;
                };
                metaData: {
                    pixelWidth: string;
                    pixelHeight: string;
                };
                action: {
                    data: string;
                };
                text?: undefined;
                textStyle?: undefined;
                maxTextLines?: undefined;
                align?: undefined;
                elementId?: undefined;
            })[];
        }[];
    };
}[];
export declare const samples: any[];
