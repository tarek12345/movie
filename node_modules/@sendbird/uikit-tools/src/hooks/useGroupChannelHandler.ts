import { useEffect, useRef } from 'react';

import type SendbirdChat from '@sendbird/chat';
import type { GroupChannelModule } from '@sendbird/chat/groupChannel';
import { GroupChannelHandler } from '@sendbird/chat/groupChannel';
import type { ModuleNamespaces } from '@sendbird/chat/lib/__definition';

import { useUniqId } from './useUniqId.js';

export const useGroupChannelHandler = (
  sdk: (SendbirdChat & ModuleNamespaces<[GroupChannelModule]>) | undefined,
  hookHandler: GroupChannelHandler,
  handlerId?: string,
) => {
  const handlerRef = useRef(hookHandler);
  const id = useUniqId();

  const internalHandlerId = handlerId ?? id;
  handlerRef.current = hookHandler;

  useEffect(() => {
    const handlerMapper = (handler: GroupChannelHandler): GroupChannelHandler => {
      const handlerKeys = Object.keys(handler);
      handlerKeys.forEach((key) => {
        // @ts-ignore
        handler[key] = (...args) => handlerRef.current?.[key]?.(...args);
      });
      return handler;
    };

    sdk?.groupChannel?.addGroupChannelHandler(internalHandlerId, handlerMapper(new GroupChannelHandler()));

    return () => {
      sdk?.groupChannel?.removeGroupChannelHandler(internalHandlerId);
    };
  }, [sdk?.groupChannel, internalHandlerId]);
};
