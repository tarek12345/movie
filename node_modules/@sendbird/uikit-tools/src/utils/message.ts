import type { SendableMessage } from '@sendbird/chat/lib/__definition';
import type { BaseMessage } from '@sendbird/chat/message';

import type { SendbirdMessage } from '../types';

export function isSendableMessage(msg?: SendbirdMessage | null): msg is SendableMessage {
  return msg !== undefined && msg !== null && 'sendingStatus' in msg;
}

export function isMyMessage(
  msg?: SendbirdMessage | null,
  currentUserId = '##__USER_ID_IS_NOT_PROVIDED__##',
): msg is SendableMessage {
  if (!isSendableMessage(msg)) return false;
  return msg.sender?.userId === currentUserId;
}

export function isNewMessage(msg: SendbirdMessage, currentUserId?: string) {
  const myMessage = isMyMessage(msg, currentUserId);
  if (myMessage) return false;
  if (msg.isAdminMessage()) return false;
  return msg.updatedAt === 0;
}

export function getMessageUniqId(msg: BaseMessage | SendableMessage) {
  if ('sendingStatus' in msg) {
    if (msg.sendingStatus === 'succeeded') return String(msg.messageId);
    return msg.reqId;
  }

  return String(msg.messageId);
}
