import type { PartialDeep } from 'type-fest';

import type { UIKitConfiguration } from '@sendbird/chat/lib/__definition';

import type { SBUConfig, SBUConfigPayloadRaw, SBUConfigRemote } from '../types.js';
import { createInitialConfig } from './initialConfig.js';
import { updateCommonConfigs } from './updators/updateCommonConfigs.js';
import { updateGroupChannelConfigs } from './updators/updateGroupChannelConfigs.js';
import { updateOpenChannelConfigs } from './updators/updateOpenChannelConfigs.js';

/**
 * @param localConfigs Set directly in code level. It has higher priority than remote ones
 * @param remoteConfigs Set by Feature Config setting in Dashboard
 * @returns SBUConfig
 */
export function getConfigsByPriority(
  localConfigs: PartialDeep<SBUConfig>,
  remoteConfigs: PartialDeep<SBUConfigRemote>,
): SBUConfig {
  const prioritizedConfigs = createInitialConfig();

  // configs.common
  updateCommonConfigs(prioritizedConfigs.common, localConfigs, remoteConfigs);

  // configs.groupChannel.channel
  updateGroupChannelConfigs(prioritizedConfigs.groupChannel, localConfigs, remoteConfigs);
  // configs.groupChannel.channelList

  // configs.openChannel
  updateOpenChannelConfigs(prioritizedConfigs.openChannel, localConfigs, remoteConfigs);

  return prioritizedConfigs;
}

/**
 * @param json UIKitConfiguration's json
 * @returns boolean
 * */
export function isRawSBUConfigPayload(json: UIKitConfiguration['json']): json is SBUConfigPayloadRaw {
  return typeof json === 'object' && 'configuration' in json && 'updated_at' in json;
}
