import type { PartialDeep } from 'type-fest';

import { isBoolean } from '../../../utils/validators.js';
import type { SBUConfig, SBUConfigRemote } from '../../types';

export function updateOpenChannelConfigs(
  target: SBUConfig['openChannel'],
  local: PartialDeep<SBUConfig>,
  remote: PartialDeep<SBUConfigRemote>,
) {
  // target.channel
  updateChannelConfig(target, local, remote);
  // target.channel.input
  updateChannelInputConfig(target, local, remote);
}

function updateChannelConfig(
  target: SBUConfig['openChannel'],
  local: PartialDeep<SBUConfig>,
  remote: PartialDeep<SBUConfigRemote>,
) {
  // enableOgtag: boolean;
  if (remote.openChannel?.channel && isBoolean(remote.openChannel?.channel?.enableOgtag)) {
    target.channel.enableOgtag = remote.openChannel.channel.enableOgtag;
  }
  if (local.openChannel?.channel && isBoolean(local.openChannel?.channel?.enableOgtag)) {
    target.channel.enableOgtag = local.openChannel?.channel?.enableOgtag;
  }
}

function updateChannelInputConfig(
  target: SBUConfig['openChannel'],
  local: PartialDeep<SBUConfig>,
  remote: PartialDeep<SBUConfigRemote>,
) {
  // input.enableDocument: boolean;
  if (remote.openChannel?.channel?.input && isBoolean(remote.openChannel?.channel?.input?.enableDocument)) {
    target.channel.input.enableDocument = remote.openChannel?.channel?.input?.enableDocument;
  }
  if (local.openChannel?.channel?.input && isBoolean(local.openChannel?.channel?.input?.enableDocument)) {
    target.channel.input.enableDocument = local.openChannel?.channel?.input?.enableDocument;
  }

  // input.camera.enablePhoto: boolean;
  if (
    remote.openChannel?.channel?.input?.camera &&
    isBoolean(remote.openChannel?.channel?.input?.camera?.enablePhoto)
  ) {
    target.channel.input.camera.enablePhoto = remote.openChannel?.channel?.input?.camera?.enablePhoto;
  }
  if (local.openChannel?.channel?.input?.camera && isBoolean(local.openChannel?.channel?.input?.camera?.enablePhoto)) {
    target.channel.input.camera.enablePhoto = local.openChannel?.channel?.input?.camera?.enablePhoto;
  }

  // input.camera.enableVideo: boolean;
  if (
    remote.openChannel?.channel?.input?.camera &&
    isBoolean(remote.openChannel?.channel?.input?.camera?.enableVideo)
  ) {
    target.channel.input.camera.enableVideo = remote.openChannel?.channel?.input?.camera?.enableVideo;
  }
  if (local.openChannel?.channel?.input?.camera && isBoolean(local.openChannel?.channel?.input?.camera?.enableVideo)) {
    target.channel.input.camera.enableVideo = local.openChannel?.channel?.input?.camera?.enableVideo;
  }

  // input.gallery.enablePhoto: boolean;
  if (
    remote.openChannel?.channel?.input?.gallery &&
    isBoolean(remote.openChannel?.channel?.input?.gallery?.enablePhoto)
  ) {
    target.channel.input.gallery.enablePhoto = remote.openChannel?.channel?.input?.gallery?.enablePhoto;
  }
  if (
    local.openChannel?.channel?.input?.gallery &&
    isBoolean(local.openChannel?.channel?.input?.gallery?.enablePhoto)
  ) {
    target.channel.input.gallery.enablePhoto = local.openChannel?.channel?.input?.gallery?.enablePhoto;
  }

  // input.gallery.enableVideo: boolean;
  if (
    remote.openChannel?.channel?.input?.gallery &&
    isBoolean(remote.openChannel?.channel?.input?.gallery?.enableVideo)
  ) {
    target.channel.input.gallery.enableVideo = remote.openChannel?.channel?.input?.gallery?.enableVideo;
  }
  if (
    local.openChannel?.channel?.input?.gallery &&
    isBoolean(local.openChannel?.channel?.input?.gallery?.enableVideo)
  ) {
    target.channel.input.gallery.enableVideo = local.openChannel?.channel?.input?.gallery?.enableVideo;
  }
}
