import type { PartialDeep } from 'type-fest';
import type { SBUConfigPayload } from '../types.js';
export interface SBUConfigStorage {
    getItem(key: string): Promise<null | string>;
    setItem(key: string, value: string): Promise<void>;
}
export declare const MemoryStorage: {
    items: Record<string, string>;
    getItem(key: string): Promise<string | null>;
    setItem(key: string, value: string): Promise<void>;
};
export declare class UIKitConfigManager {
    private key?;
    private storage;
    constructor(storage?: SBUConfigStorage);
    init(appId: string): Promise<SBUConfigPayload>;
    get safeKey(): string;
    update(remoteConfigPayload: {
        updatedAt: SBUConfigPayload['updatedAt'];
        configuration: PartialDeep<SBUConfigPayload['configuration']>;
    }): Promise<SBUConfigPayload>;
    get(): Promise<SBUConfigPayload>;
}
