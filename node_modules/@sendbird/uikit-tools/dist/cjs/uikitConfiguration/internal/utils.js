"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRawSBUConfigPayload = exports.getConfigsByPriority = void 0;
const initialConfig_js_1 = require("./initialConfig.js");
const updateCommonConfigs_js_1 = require("./updators/updateCommonConfigs.js");
const updateGroupChannelConfigs_js_1 = require("./updators/updateGroupChannelConfigs.js");
const updateOpenChannelConfigs_js_1 = require("./updators/updateOpenChannelConfigs.js");
/**
 * @param localConfigs Set directly in code level. It has higher priority than remote ones
 * @param remoteConfigs Set by Feature Config setting in Dashboard
 * @returns SBUConfig
 */
function getConfigsByPriority(localConfigs, remoteConfigs) {
    const prioritizedConfigs = (0, initialConfig_js_1.createInitialConfig)();
    // configs.common
    (0, updateCommonConfigs_js_1.updateCommonConfigs)(prioritizedConfigs.common, localConfigs, remoteConfigs);
    // configs.groupChannel.channel
    (0, updateGroupChannelConfigs_js_1.updateGroupChannelConfigs)(prioritizedConfigs.groupChannel, localConfigs, remoteConfigs);
    // configs.groupChannel.channelList
    // configs.openChannel
    (0, updateOpenChannelConfigs_js_1.updateOpenChannelConfigs)(prioritizedConfigs.openChannel, localConfigs, remoteConfigs);
    return prioritizedConfigs;
}
exports.getConfigsByPriority = getConfigsByPriority;
/**
 * @param json UIKitConfiguration's json
 * @returns boolean
 * */
function isRawSBUConfigPayload(json) {
    return typeof json === 'object' && 'configuration' in json && 'updated_at' in json;
}
exports.isRawSBUConfigPayload = isRawSBUConfigPayload;
