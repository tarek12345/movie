"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeObject = void 0;
const validators_js_1 = require("./validators.js");
/**
 * Merges values from the subset object into the target object.
 *
 * @param target - The target object to merge into.
 * @param subset - The subset object from which values are merged into the target.
 * @returns A new object resulting from the merge operation.
 */
function mergeObject(target, subset) {
    // copy target to prevent mutation
    const object = Object.assign({}, target);
    Object.keys(subset).forEach((key) => {
        if (Object.prototype.hasOwnProperty.call(object, key) && (0, validators_js_1.isSameType)(object[key], subset[key])) {
            if (typeof subset[key] === 'object' && !Array.isArray(subset[key])) {
                // Recursively call getConfigsByPriority only when the value of the key is Object
                object[key] = mergeObject(object[key], subset[key]);
            }
            else {
                object[key] = subset[key];
            }
        }
    });
    return object;
}
exports.mergeObject = mergeObject;
