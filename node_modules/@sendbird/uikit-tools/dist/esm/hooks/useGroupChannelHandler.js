import { useEffect, useRef } from 'react';
import { GroupChannelHandler } from '@sendbird/chat/groupChannel';
import { useUniqId } from './useUniqId.js';
export const useGroupChannelHandler = (sdk, hookHandler, handlerId) => {
    const handlerRef = useRef(hookHandler);
    const id = useUniqId();
    const internalHandlerId = handlerId !== null && handlerId !== void 0 ? handlerId : id;
    handlerRef.current = hookHandler;
    useEffect(() => {
        var _a;
        const handlerMapper = (handler) => {
            const handlerKeys = Object.keys(handler);
            handlerKeys.forEach((key) => {
                // @ts-ignore
                handler[key] = (...args) => { var _a, _b; return (_b = (_a = handlerRef.current) === null || _a === void 0 ? void 0 : _a[key]) === null || _b === void 0 ? void 0 : _b.call(_a, ...args); };
            });
            return handler;
        };
        (_a = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a === void 0 ? void 0 : _a.addGroupChannelHandler(internalHandlerId, handlerMapper(new GroupChannelHandler()));
        return () => {
            var _a;
            (_a = sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel) === null || _a === void 0 ? void 0 : _a.removeGroupChannelHandler(internalHandlerId);
        };
    }, [sdk === null || sdk === void 0 ? void 0 : sdk.groupChannel, internalHandlerId]);
};
